// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using My.Database.Context;

#nullable disable

namespace My.Database.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250611061948_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("My.Database.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER")
                        .HasColumnName("RoleId");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@example.com",
                            FirstName = "Admin",
                            LastName = "User",
                            Role = 0
                        });
                });

            modelBuilder.Entity("My.Database.Models.UserActivation", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ActivationToken")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ActivationTokenExpiration")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("UserActivations");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            ActivationToken = "test-token-123",
                            ActivationTokenExpiration = new DateTime(2025, 1, 8, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("My.Database.Models.UserActivation", b =>
                {
                    b.HasOne("My.Database.Models.User", "User")
                        .WithOne("Activation")
                        .HasForeignKey("My.Database.Models.UserActivation", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("My.Database.Models.User", b =>
                {
                    b.Navigation("Activation")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
